<Project>

  <PropertyGroup>
    <RestoreDependsOn>ApplyNuGetPolicies;$(RestoreDependsOn)</RestoreDependsOn>
    <TestDependsOn Condition="'$(NoParallelTests)' != 'true'">$(TestDependsOn);TestProjectsInParallel</TestDependsOn>
    <ApplyNuGetPoliciesDependsOn>
      $(ApplyNuGetPoliciesDependsOn);
      ResolveSolutions;
    </ApplyNuGetPoliciesDependsOn>
    <CoreTestDependsOn>
      ResolveSolutions;
    </CoreTestDependsOn>
    <CoreTestDependsOn Condition="'$(NoBuild)' != 'true'">
      $(CoreTestDependsOn)
      BuildSolutions;
    </CoreTestDependsOn>
  </PropertyGroup>

  <Target Name="TestProjectsInParallel" DependsOnTargets="$(CoreTestDependsOn)">
    <RemoveDuplicates Inputs="@(ProjectsToTest)">
      <Output TaskParameter="Filtered" ItemName="_TestProjectItems" />
    </RemoveDuplicates>

    <VSTestInParallel Projects="@(_TestProjectItems)" ProjectProperties="$(SolutionProperties)" />
  </Target>

  <ItemGroup Condition="@(PackageLineup->Count()) != 0 AND '$(RestrictVersionOnPackageReference)' != 'false' ">
    <!-- Automatically warn about package reference's that have a non-empty version, but only when lineups are used. -->
    <DisallowPackageReferenceVersion Include="Debug" ErrorLevel="warn"/>
    <DisallowPackageReferenceVersion Include="Release" ErrorLevel="error"/>
  </ItemGroup>

  <Target Name="GetLineups"
          Returns="@(PackageLineup)" />

  <Target Name="Pin" DependsOnTargets="ApplyNuGetPolicies">
    <Message Text="Pinning done. Run /t:Restore to install the updated versions." Importance="High" />
  </Target>

  <Target Name="ApplyNuGetPolicies"
          DependsOnTargets="$(ApplyNuGetPoliciesDependsOn)"
          Condition="@(Solutions->Count()) != 0">

    <ApplyNuGetPolicies
      Policies="@(PackageLineup);@(AdditionalRestoreSources);@(DisallowPackageReferenceVersion);@(FolderLineup)"
      Projects="@(Solutions)"
      ProjectProperties="$(SolutionProperties)"
      SolutionDirectory="$(RepositoryRoot)"
      RestoreSources="$(PolicyRestoreSources)"
      RestoreAdditionalSources="$(PolicyRestoreAdditionalSources)"
      RestorePackagesPath="$(PolicyRestorePackagesPath)"
      RestoreDisableParallel="$(PolicyRestoreDisableParallel)"
      RestoreConfigFile="$(PolicyRestoreConfigFile)"
      RestoreNoCache="$(PolicyRestoreNoCache)"
      RestoreIgnoreFailedSources="$(PolicyRestoreIgnoreFailedSources)" />

  </Target>

</Project>
